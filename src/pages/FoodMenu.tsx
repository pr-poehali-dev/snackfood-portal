
import { useState, useEffect } from "react";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import FoodCard from "@/components/FoodCard";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { motion } from "framer-motion";

// –¢–∏–ø—ã –¥–ª—è –±–ª—é–¥
type FoodItem = {
  id: number;
  name: string;
  description: string;
  price: number;
  image: string;
  isPopular?: boolean;
  calories?: number;
  preparationTime?: string;
  category: string;
};

const FoodMenu = () => {
  const [activeTab, setActiveTab] = useState("all");
  const [isLoaded, setIsLoaded] = useState(false);
  
  useEffect(() => {
    setIsLoaded(true);
    
    // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ —è–∫–æ—Ä—è–º
    const handleSmoothScroll = (e: MouseEvent) => {
      const target = e.target as HTMLElement;
      if (target.tagName === 'A' && target.getAttribute('href')?.startsWith('#')) {
        const id = target.getAttribute('href')?.substring(1);
        const element = document.getElementById(id || '');
        
        if (element) {
          e.preventDefault();
          element.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      }
    };

    document.addEventListener('click', handleSmoothScroll);
    return () => document.removeEventListener('click', handleSmoothScroll);
  }, []);

  // –î–∞–Ω–Ω—ã–µ –æ –±–ª—é–¥–∞—Ö
  const foodItems: FoodItem[] = [
    {
      id: 1,
      name: "–ì—Ä–µ—á–∫–∞ —Å —Å–æ—Å–∏—Å–∫–æ–π",
      description: "–ê—Ä–æ–º–∞—Ç–Ω–∞—è –≥—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ —Å —Å–æ—á–Ω–æ–π –æ—Ç–≤–∞—Ä–Ω–æ–π —Å–æ—Å–∏—Å–∫–æ–π –∏ —Å–ª–∏–≤–æ—á–Ω—ã–º –º–∞—Å–ª–æ–º",
      price: 150,
      image: "https://images.unsplash.com/photo-1683125695361-395ac8f8d8e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
      isPopular: true,
      calories: 420,
      preparationTime: "15 –º–∏–Ω—É—Ç",
      category: "main"
    },
    {
      id: 2,
      name: "–ú–∞–∫–∞—Ä–æ–Ω—ã —Å —Å—ã—Ä–æ–º –∏ –≤–µ—Ç—á–∏–Ω–æ–π",
      description: "–ú–∞–∫–∞—Ä–æ–Ω—ã –≤ —Å–ª–∏–≤–æ—á–Ω–æ–º —Å–æ—É—Å–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–µ—Ä—Ç–æ–≥–æ —Å—ã—Ä–∞ –∏ –∫—É–±–∏–∫–æ–≤ –Ω–µ–∂–Ω–æ–π –≤–µ—Ç—á–∏–Ω—ã",
      price: 180,
      image: "https://images.unsplash.com/photo-1621996346565-e3dbc646d9a9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
      calories: 550,
      preparationTime: "20 –º–∏–Ω—É—Ç",
      category: "main"
    },
    {
      id: 3,
      name: "–û–≤–æ—â–Ω–æ–π —Å–∞–ª–∞—Ç –∏–∑ –æ–≥—É—Ä—Ü–æ–≤ –∏ –ø–æ–º–∏–¥–æ—Ä–æ–≤",
      description: "–°–≤–µ–∂–∏–µ –æ–≥—É—Ä—Ü—ã –∏ –ø–æ–º–∏–¥–æ—Ä—ã —Å –∑–∞–ø—Ä–∞–≤–∫–æ–π –∏–∑ –æ–ª–∏–≤–∫–æ–≤–æ–≥–æ –º–∞—Å–ª–∞ –∏ —Å–ø–µ—Ü–∏–π",
      price: 120,
      image: "https://images.unsplash.com/photo-1540420773420-3366772f4999?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
      isPopular: true,
      calories: 120,
      preparationTime: "5 –º–∏–Ω—É—Ç",
      category: "salad"
    },
    {
      id: 4,
      name: "–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è",
      description: "–°–æ—á–Ω–∞—è —Å–æ—Å–∏—Å–∫–∞ –≤ —Ö—Ä—É—Å—Ç—è—â–µ–º —Ç–µ—Å—Ç–µ —Å –Ω–æ—Ç–∫–∞–º–∏ –∑–µ–ª–µ–Ω–∏ –∏ —Å–ø–µ—Ü–∏–π",
      price: 80,
      image: "https://images.unsplash.com/photo-1619740455993-9e612b50538e?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      calories: 320,
      preparationTime: "10 –º–∏–Ω—É—Ç",
      category: "snack"
    },
    {
      id: 5,
      name: "–ë—É—Ç–µ—Ä–±—Ä–æ–¥ XXL",
      description: "–û–≥—Ä–æ–º–Ω—ã–π –±—É—Ç–µ—Ä–±—Ä–æ–¥ —Å —Ç—Ä–µ–º—è –≤–∏–¥–∞–º–∏ –∫–æ–ª–±–∞—Å—ã, —Å—ã—Ä–æ–º –∏ —Å–≤–µ–∂–∏–º–∏ –æ–≤–æ—â–∞–º–∏",
      price: 170,
      image: "https://images.unsplash.com/photo-1553909489-cd47e0907980?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      calories: 480,
      preparationTime: "7 –º–∏–Ω—É—Ç",
      category: "snack"
    },
  ];

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–ª—é–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const filteredItems = activeTab === "all" 
    ? foodItems 
    : foodItems.filter(item => item.category === activeTab);

  return (
    <div 
      className={`min-h-screen flex flex-col transition-opacity duration-1000 ${
        isLoaded ? 'opacity-100' : 'opacity-0'
      }`}
    >
      <Header />
      
      <main className="flex-grow container py-8">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="text-center mb-12 pt-16"
        >
          <h1 className="text-4xl font-bold mb-4">–ù–∞—à–∏ –±–ª—é–¥–∞</h1>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º –≤–∫—É—Å–Ω—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –±–ª—é–¥, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å –ª—é–±–æ–≤—å—é –∏–∑ —Å–≤–µ–∂–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
          </p>
        </motion.div>
        
        <Tabs defaultValue="all" className="w-full" onValueChange={setActiveTab}>
          <div className="flex justify-center mb-8">
            <TabsList className="grid grid-cols-4 w-full max-w-md">
              <TabsTrigger value="all" className="rounded-full">–í—Å–µ</TabsTrigger>
              <TabsTrigger value="main" className="rounded-full">–û—Å–Ω–æ–≤–Ω—ã–µ</TabsTrigger>
              <TabsTrigger value="salad" className="rounded-full">–°–∞–ª–∞—Ç—ã</TabsTrigger>
              <TabsTrigger value="snack" className="rounded-full">–ó–∞–∫—É—Å–∫–∏</TabsTrigger>
            </TabsList>
          </div>
          
          <TabsContent value={activeTab} className="mt-0">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredItems.map((item, index) => (
                <FoodCard key={item.id} item={item} delay={index} />
              ))}
            </div>
          </TabsContent>
        </Tabs>
        
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: 0.3 }}
          className="mt-16 bg-muted rounded-xl p-8"
        >
          <h2 className="text-2xl font-bold mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–∞–Ω–∏–∏</h2>
          <p className="mb-6">
            –í—Å–µ –Ω–∞—à–∏ –±–ª—é–¥–∞ –≥–æ—Ç–æ–≤—è—Ç—Å—è –∏–∑ —Å–≤–µ–∂–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ú—ã —É–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—É—é –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∏ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞.
          </p>
          
          <div className="grid md:grid-cols-3 gap-4 text-center">
            <div className="bg-white p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow">
              <div className="text-3xl text-primary mb-2">üç≤</div>
              <h3 className="font-medium mb-2">–î–æ–º–∞—à–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã</h3>
              <p className="text-sm text-muted-foreground">–í—Å–µ –±–ª—é–¥–∞ –≥–æ—Ç–æ–≤—è—Ç—Å—è –ø–æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow">
              <div className="text-3xl text-primary mb-2">ü•¶</div>
              <h3 className="font-medium mb-2">–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
              <p className="text-sm text-muted-foreground">–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow">
              <div className="text-3xl text-primary mb-2">‚è±Ô∏è</div>
              <h3 className="font-medium mb-2">–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ</h3>
              <p className="text-sm text-muted-foreground">–ù–µ –∑–∞—Å—Ç–∞–≤–∏–º –≤–∞—Å –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å</p>
            </div>
          </div>
        </motion.div>
      </main>
      
      <Footer />
      
      {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö" */}
      <button 
        onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
        className="fixed bottom-6 right-6 w-12 h-12 rounded-full bg-primary text-white shadow-lg flex items-center justify-center hover:bg-primary/90 transition-all hover:scale-110 z-50 hover:animate-bounce"
        aria-label="–ù–∞–≤–µ—Ä—Ö"
      >
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          className="h-6 w-6" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            strokeLinecap="round" 
            strokeLinejoin="round" 
            strokeWidth={2} 
            d="M5 15l7-7 7 7" 
          />
        </svg>
      </button>
    </div>
  );
};

export default FoodMenu;
